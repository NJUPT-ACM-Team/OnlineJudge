// Code generated by protoc-gen-go.
// source: api/list_contests.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ListContestsRequest_Element int32

const (
	ListContestsRequest_CID       ListContestsRequest_Element = 0
	ListContestsRequest_TITLE     ListContestsRequest_Element = 1
	ListContestsRequest_STARTTIME ListContestsRequest_Element = 2
	ListContestsRequest_ENDTIME   ListContestsRequest_Element = 3
	ListContestsRequest_STATUS    ListContestsRequest_Element = 4
)

var ListContestsRequest_Element_name = map[int32]string{
	0: "CID",
	1: "TITLE",
	2: "STARTTIME",
	3: "ENDTIME",
	4: "STATUS",
}
var ListContestsRequest_Element_value = map[string]int32{
	"CID":       0,
	"TITLE":     1,
	"STARTTIME": 2,
	"ENDTIME":   3,
	"STATUS":    4,
}

func (x ListContestsRequest_Element) String() string {
	return proto.EnumName(ListContestsRequest_Element_name, int32(x))
}
func (ListContestsRequest_Element) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{0, 0}
}

type ListContestsRequest_Filter_CType int32

const (
	ListContestsRequest_Filter_ICPC ListContestsRequest_Filter_CType = 0
	ListContestsRequest_Filter_OI   ListContestsRequest_Filter_CType = 1
	ListContestsRequest_Filter_CF   ListContestsRequest_Filter_CType = 2
)

var ListContestsRequest_Filter_CType_name = map[int32]string{
	0: "ICPC",
	1: "OI",
	2: "CF",
}
var ListContestsRequest_Filter_CType_value = map[string]int32{
	"ICPC": 0,
	"OI":   1,
	"CF":   2,
}

func (x ListContestsRequest_Filter_CType) String() string {
	return proto.EnumName(ListContestsRequest_Filter_CType_name, int32(x))
}
func (ListContestsRequest_Filter_CType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{0, 0, 0}
}

type ListContestsRequest struct {
	PerPage     int32                       `protobuf:"varint,1,opt,name=per_page,json=perPage" json:"per_page,omitempty"`
	CurrentPage int32                       `protobuf:"varint,2,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	OrderBy     ListContestsRequest_Element `protobuf:"varint,3,opt,name=order_by,json=orderBy,enum=api.ListContestsRequest_Element" json:"order_by,omitempty"`
	IsDesc      bool                        `protobuf:"varint,4,opt,name=is_desc,json=isDesc" json:"is_desc,omitempty"`
	Filter      *ListContestsRequest_Filter `protobuf:"bytes,5,opt,name=filter" json:"filter,omitempty"`
}

func (m *ListContestsRequest) Reset()                    { *m = ListContestsRequest{} }
func (m *ListContestsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListContestsRequest) ProtoMessage()               {}
func (*ListContestsRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ListContestsRequest) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *ListContestsRequest) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ListContestsRequest) GetOrderBy() ListContestsRequest_Element {
	if m != nil {
		return m.OrderBy
	}
	return ListContestsRequest_CID
}

func (m *ListContestsRequest) GetIsDesc() bool {
	if m != nil {
		return m.IsDesc
	}
	return false
}

func (m *ListContestsRequest) GetFilter() *ListContestsRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ListContestsRequest_Filter struct {
	Ctype     ListContestsRequest_Filter_CType `protobuf:"varint,1,opt,name=ctype,enum=api.ListContestsRequest_Filter_CType" json:"ctype,omitempty"`
	IsPublic  bool                             `protobuf:"varint,2,opt,name=is_public,json=isPublic" json:"is_public,omitempty"`
	IsVirtual bool                             `protobuf:"varint,3,opt,name=is_virtual,json=isVirtual" json:"is_virtual,omitempty"`
}

func (m *ListContestsRequest_Filter) Reset()                    { *m = ListContestsRequest_Filter{} }
func (m *ListContestsRequest_Filter) String() string            { return proto.CompactTextString(m) }
func (*ListContestsRequest_Filter) ProtoMessage()               {}
func (*ListContestsRequest_Filter) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0} }

func (m *ListContestsRequest_Filter) GetCtype() ListContestsRequest_Filter_CType {
	if m != nil {
		return m.Ctype
	}
	return ListContestsRequest_Filter_ICPC
}

func (m *ListContestsRequest_Filter) GetIsPublic() bool {
	if m != nil {
		return m.IsPublic
	}
	return false
}

func (m *ListContestsRequest_Filter) GetIsVirtual() bool {
	if m != nil {
		return m.IsVirtual
	}
	return false
}

type ListContestsResponse struct {
	Lines       []*ListContestsResponse_PerLine `protobuf:"bytes,1,rep,name=lines" json:"lines,omitempty"`
	TotalLines  int32                           `protobuf:"varint,2,opt,name=total_lines,json=totalLines" json:"total_lines,omitempty"`
	TotalPages  int32                           `protobuf:"varint,3,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	CurrentPage int32                           `protobuf:"varint,4,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	Error       *Error                          `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
}

func (m *ListContestsResponse) Reset()                    { *m = ListContestsResponse{} }
func (m *ListContestsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListContestsResponse) ProtoMessage()               {}
func (*ListContestsResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *ListContestsResponse) GetLines() []*ListContestsResponse_PerLine {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *ListContestsResponse) GetTotalLines() int32 {
	if m != nil {
		return m.TotalLines
	}
	return 0
}

func (m *ListContestsResponse) GetTotalPages() int32 {
	if m != nil {
		return m.TotalPages
	}
	return 0
}

func (m *ListContestsResponse) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ListContestsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListContestsResponse_PerLine struct {
	ContestId int64  `protobuf:"varint,1,opt,name=contest_id,json=contestId" json:"contest_id,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	StartTime string `protobuf:"bytes,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Status    string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Access    string `protobuf:"bytes,6,opt,name=access" json:"access,omitempty"`
}

func (m *ListContestsResponse_PerLine) Reset()                    { *m = ListContestsResponse_PerLine{} }
func (m *ListContestsResponse_PerLine) String() string            { return proto.CompactTextString(m) }
func (*ListContestsResponse_PerLine) ProtoMessage()               {}
func (*ListContestsResponse_PerLine) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1, 0} }

func (m *ListContestsResponse_PerLine) GetContestId() int64 {
	if m != nil {
		return m.ContestId
	}
	return 0
}

func (m *ListContestsResponse_PerLine) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

func init() {
	proto.RegisterType((*ListContestsRequest)(nil), "api.ListContestsRequest")
	proto.RegisterType((*ListContestsRequest_Filter)(nil), "api.ListContestsRequest.Filter")
	proto.RegisterType((*ListContestsResponse)(nil), "api.ListContestsResponse")
	proto.RegisterType((*ListContestsResponse_PerLine)(nil), "api.ListContestsResponse.PerLine")
	proto.RegisterEnum("api.ListContestsRequest_Element", ListContestsRequest_Element_name, ListContestsRequest_Element_value)
	proto.RegisterEnum("api.ListContestsRequest_Filter_CType", ListContestsRequest_Filter_CType_name, ListContestsRequest_Filter_CType_value)
}

func init() { proto.RegisterFile("api/list_contests.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xe3, 0xf8, 0x6b, 0x02, 0x95, 0xb5, 0x54, 0x34, 0x14, 0xa1, 0xba, 0x91, 0x90, 0x72,
	0x32, 0x52, 0x38, 0xf4, 0xd0, 0x53, 0x71, 0x5d, 0xc9, 0x52, 0x80, 0x68, 0x6b, 0xb8, 0x5a, 0xae,
	0x3d, 0x54, 0x2b, 0x39, 0xb6, 0xd9, 0xd9, 0x20, 0xe5, 0xc8, 0x7f, 0xe1, 0xc0, 0xcf, 0xe1, 0x27,
	0x21, 0xef, 0xba, 0x87, 0xaa, 0x45, 0x9c, 0xa2, 0x79, 0xef, 0xcd, 0x64, 0xde, 0xce, 0x33, 0x1c,
	0x97, 0xbd, 0x78, 0xd7, 0x08, 0x52, 0x45, 0xd5, 0xb5, 0x0a, 0x49, 0x51, 0xdc, 0xcb, 0x4e, 0x75,
	0xcc, 0x2e, 0x7b, 0x71, 0x12, 0x0e, 0x6c, 0xd5, 0x6d, 0xb7, 0x5d, 0x6b, 0xe0, 0xc5, 0x1f, 0x1b,
	0x5e, 0xac, 0x05, 0xa9, 0x64, 0x54, 0x73, 0xfc, 0xbe, 0x43, 0x52, 0xec, 0x15, 0xf8, 0x3d, 0xca,
	0xa2, 0x2f, 0xef, 0x70, 0x6e, 0x45, 0xd6, 0xd2, 0xe1, 0x5e, 0x8f, 0x72, 0x53, 0xde, 0x21, 0x3b,
	0x83, 0x67, 0xd5, 0x4e, 0x4a, 0x6c, 0x95, 0xa1, 0x27, 0x9a, 0x9e, 0x8d, 0x98, 0x96, 0x5c, 0x80,
	0xdf, 0xc9, 0x1a, 0x65, 0x71, 0xbb, 0x9f, 0xdb, 0x91, 0xb5, 0x3c, 0x5c, 0x45, 0x71, 0xd9, 0x8b,
	0xf8, 0x89, 0x7f, 0x8a, 0xd3, 0x06, 0xb7, 0xd8, 0x2a, 0xee, 0xe9, 0x8e, 0x0f, 0x7b, 0x76, 0x0c,
	0x9e, 0xa0, 0xa2, 0x46, 0xaa, 0xe6, 0xd3, 0xc8, 0x5a, 0xfa, 0xdc, 0x15, 0x74, 0x85, 0x54, 0xb1,
	0x73, 0x70, 0xbf, 0x89, 0x46, 0xa1, 0x9c, 0x3b, 0x91, 0xb5, 0x9c, 0xad, 0x4e, 0xff, 0x39, 0xf3,
	0x5a, 0xcb, 0xf8, 0x28, 0x3f, 0xf9, 0x65, 0x81, 0x6b, 0x20, 0x76, 0x01, 0x4e, 0xa5, 0xf6, 0xbd,
	0x31, 0x75, 0xb8, 0x7a, 0xfb, 0x9f, 0x11, 0x71, 0x92, 0xef, 0x7b, 0xe4, 0xa6, 0x87, 0xbd, 0x86,
	0x40, 0x50, 0xd1, 0xef, 0x6e, 0x1b, 0x51, 0x69, 0xdb, 0x3e, 0xf7, 0x05, 0x6d, 0x74, 0xcd, 0xde,
	0x00, 0x08, 0x2a, 0x7e, 0x08, 0xa9, 0x76, 0x65, 0xa3, 0x5d, 0xfb, 0x3c, 0x10, 0xf4, 0xd5, 0x00,
	0x8b, 0x33, 0x70, 0xf4, 0x2c, 0xe6, 0xc3, 0x34, 0x4b, 0x36, 0x49, 0x78, 0xc0, 0x5c, 0x98, 0x7c,
	0xce, 0x42, 0x6b, 0xf8, 0x4d, 0xae, 0xc3, 0xc9, 0x22, 0x05, 0x6f, 0x7c, 0x0c, 0xe6, 0x81, 0x9d,
	0x64, 0x57, 0xe1, 0x01, 0x0b, 0xc0, 0xc9, 0xb3, 0x7c, 0x9d, 0x86, 0x16, 0x7b, 0x0e, 0xc1, 0x4d,
	0x7e, 0xc9, 0xf3, 0x3c, 0xfb, 0x98, 0x86, 0x13, 0x36, 0x03, 0x2f, 0xfd, 0x74, 0xa5, 0x0b, 0x9b,
	0x01, 0xb8, 0x37, 0xf9, 0x65, 0xfe, 0xe5, 0x26, 0x9c, 0x2e, 0x7e, 0xda, 0x70, 0xf4, 0xd0, 0x11,
	0xf5, 0x5d, 0x4b, 0xc8, 0xce, 0xc1, 0x69, 0x44, 0x8b, 0x34, 0xb7, 0x22, 0x7b, 0x39, 0x5b, 0x9d,
	0x3d, 0xe1, 0xdd, 0x28, 0xe3, 0x0d, 0xca, 0xb5, 0x68, 0x91, 0x1b, 0x3d, 0x3b, 0x85, 0x99, 0xea,
	0x54, 0xd9, 0x14, 0xa6, 0xdd, 0x1c, 0x1c, 0x34, 0xb4, 0x7e, 0x28, 0x18, 0x02, 0x41, 0xda, 0xfc,
	0xbd, 0x60, 0xc8, 0x03, 0x3d, 0xca, 0xcc, 0xf4, 0x71, 0x66, 0x22, 0x70, 0x50, 0xca, 0xee, 0xfe,
	0xb8, 0xa0, 0xb7, 0x4b, 0x07, 0x84, 0x1b, 0xe2, 0xe4, 0xb7, 0x05, 0xde, 0xb8, 0xd9, 0xf0, 0xda,
	0x63, 0xc0, 0x0b, 0x51, 0xeb, 0x63, 0xda, 0x3c, 0x18, 0x91, 0xac, 0x66, 0x47, 0xe0, 0x28, 0xa1,
	0x1a, 0x13, 0xce, 0x80, 0x9b, 0x62, 0x68, 0x22, 0x55, 0x4a, 0x55, 0x28, 0xb1, 0x45, 0xbd, 0x65,
	0xc0, 0x03, 0x8d, 0xe4, 0x62, 0x8b, 0x43, 0xe6, 0xb1, 0xad, 0x0d, 0x39, 0xd5, 0xa4, 0x87, 0x6d,
	0xad, 0xa9, 0x97, 0xe0, 0x92, 0x2a, 0xd5, 0x8e, 0xf4, 0x76, 0x01, 0x1f, 0xab, 0x01, 0x2f, 0xab,
	0x0a, 0x89, 0xe6, 0xae, 0xc1, 0x4d, 0x75, 0xeb, 0xea, 0xaf, 0xeb, 0xfd, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x0d, 0x04, 0x2e, 0x57, 0x8f, 0x03, 0x00, 0x00,
}
