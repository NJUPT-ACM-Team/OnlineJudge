// Code generated by protoc-gen-go.
// source: api/contest_list_submissions.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ContestListSubmissionsRequest struct {
	PerPage          int32  `protobuf:"varint,1,opt,name=per_page,json=perPage" json:"per_page,omitempty"`
	CurrentPage      int32  `protobuf:"varint,2,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	FilterUsername   string `protobuf:"bytes,3,opt,name=filter_username,json=filterUsername" json:"filter_username,omitempty"`
	FilterLabel      string `protobuf:"bytes,4,opt,name=filter_label,json=filterLabel" json:"filter_label,omitempty"`
	FilterStatusCode string `protobuf:"bytes,5,opt,name=filter_status_code,json=filterStatusCode" json:"filter_status_code,omitempty"`
	FilterLanguage   string `protobuf:"bytes,6,opt,name=filter_language,json=filterLanguage" json:"filter_language,omitempty"`
	FilterCompiler   string `protobuf:"bytes,7,opt,name=filter_compiler,json=filterCompiler" json:"filter_compiler,omitempty"`
	IsDesc           bool   `protobuf:"varint,8,opt,name=is_desc,json=isDesc" json:"is_desc,omitempty"`
}

func (m *ContestListSubmissionsRequest) Reset()                    { *m = ContestListSubmissionsRequest{} }
func (m *ContestListSubmissionsRequest) String() string            { return proto.CompactTextString(m) }
func (*ContestListSubmissionsRequest) ProtoMessage()               {}
func (*ContestListSubmissionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ContestListSubmissionsRequest) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *ContestListSubmissionsRequest) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ContestListSubmissionsRequest) GetFilterUsername() string {
	if m != nil {
		return m.FilterUsername
	}
	return ""
}

func (m *ContestListSubmissionsRequest) GetFilterLabel() string {
	if m != nil {
		return m.FilterLabel
	}
	return ""
}

func (m *ContestListSubmissionsRequest) GetFilterStatusCode() string {
	if m != nil {
		return m.FilterStatusCode
	}
	return ""
}

func (m *ContestListSubmissionsRequest) GetFilterLanguage() string {
	if m != nil {
		return m.FilterLanguage
	}
	return ""
}

func (m *ContestListSubmissionsRequest) GetFilterCompiler() string {
	if m != nil {
		return m.FilterCompiler
	}
	return ""
}

func (m *ContestListSubmissionsRequest) GetIsDesc() bool {
	if m != nil {
		return m.IsDesc
	}
	return false
}

type ContestListSubmissionsResponse struct {
	Lines       []*ContestListSubmissionsResponse_PerLine `protobuf:"bytes,1,rep,name=lines" json:"lines,omitempty"`
	TotalLines  int32                                     `protobuf:"varint,2,opt,name=total_lines,json=totalLines" json:"total_lines,omitempty"`
	TotalPages  int32                                     `protobuf:"varint,3,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	CurrentPage int32                                     `protobuf:"varint,4,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	Error       *Error                                    `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
}

func (m *ContestListSubmissionsResponse) Reset()                    { *m = ContestListSubmissionsResponse{} }
func (m *ContestListSubmissionsResponse) String() string            { return proto.CompactTextString(m) }
func (*ContestListSubmissionsResponse) ProtoMessage()               {}
func (*ContestListSubmissionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *ContestListSubmissionsResponse) GetLines() []*ContestListSubmissionsResponse_PerLine {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *ContestListSubmissionsResponse) GetTotalLines() int32 {
	if m != nil {
		return m.TotalLines
	}
	return 0
}

func (m *ContestListSubmissionsResponse) GetTotalPages() int32 {
	if m != nil {
		return m.TotalPages
	}
	return 0
}

func (m *ContestListSubmissionsResponse) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ContestListSubmissionsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ContestListSubmissionsResponse_PerLine struct {
	Label           string    `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	RunId           int64     `protobuf:"varint,2,opt,name=run_id,json=runId" json:"run_id,omitempty"`
	Username        string    `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	Status          string    `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	StatusCode      string    `protobuf:"bytes,5,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	CeInfo          string    `protobuf:"bytes,6,opt,name=ce_info,json=ceInfo" json:"ce_info,omitempty"`
	Language        *Language `protobuf:"bytes,7,opt,name=language" json:"language,omitempty"`
	TimeUsed        int32     `protobuf:"varint,8,opt,name=time_used,json=timeUsed" json:"time_used,omitempty"`
	MemoryUsed      int32     `protobuf:"varint,9,opt,name=memory_used,json=memoryUsed" json:"memory_used,omitempty"`
	Testcases       int32     `protobuf:"varint,10,opt,name=testcases" json:"testcases,omitempty"`
	TestcasesPassed int32     `protobuf:"varint,11,opt,name=testcases_passed,json=testcasesPassed" json:"testcases_passed,omitempty"`
	CodeLength      int32     `protobuf:"varint,12,opt,name=code_length,json=codeLength" json:"code_length,omitempty"`
	SubmitTime      string    `protobuf:"bytes,13,opt,name=submit_time,json=submitTime" json:"submit_time,omitempty"`
	Code            string    `protobuf:"bytes,14,opt,name=code" json:"code,omitempty"`
	IsSpj           bool      `protobuf:"varint,15,opt,name=is_spj,json=isSpj" json:"is_spj,omitempty"`
}

func (m *ContestListSubmissionsResponse_PerLine) Reset() {
	*m = ContestListSubmissionsResponse_PerLine{}
}
func (m *ContestListSubmissionsResponse_PerLine) String() string { return proto.CompactTextString(m) }
func (*ContestListSubmissionsResponse_PerLine) ProtoMessage()    {}
func (*ContestListSubmissionsResponse_PerLine) Descriptor() ([]byte, []int) {
	return fileDescriptor4, []int{1, 0}
}

func (m *ContestListSubmissionsResponse_PerLine) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ContestListSubmissionsResponse_PerLine) GetRunId() int64 {
	if m != nil {
		return m.RunId
	}
	return 0
}

func (m *ContestListSubmissionsResponse_PerLine) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ContestListSubmissionsResponse_PerLine) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ContestListSubmissionsResponse_PerLine) GetStatusCode() string {
	if m != nil {
		return m.StatusCode
	}
	return ""
}

func (m *ContestListSubmissionsResponse_PerLine) GetCeInfo() string {
	if m != nil {
		return m.CeInfo
	}
	return ""
}

func (m *ContestListSubmissionsResponse_PerLine) GetLanguage() *Language {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *ContestListSubmissionsResponse_PerLine) GetTimeUsed() int32 {
	if m != nil {
		return m.TimeUsed
	}
	return 0
}

func (m *ContestListSubmissionsResponse_PerLine) GetMemoryUsed() int32 {
	if m != nil {
		return m.MemoryUsed
	}
	return 0
}

func (m *ContestListSubmissionsResponse_PerLine) GetTestcases() int32 {
	if m != nil {
		return m.Testcases
	}
	return 0
}

func (m *ContestListSubmissionsResponse_PerLine) GetTestcasesPassed() int32 {
	if m != nil {
		return m.TestcasesPassed
	}
	return 0
}

func (m *ContestListSubmissionsResponse_PerLine) GetCodeLength() int32 {
	if m != nil {
		return m.CodeLength
	}
	return 0
}

func (m *ContestListSubmissionsResponse_PerLine) GetSubmitTime() string {
	if m != nil {
		return m.SubmitTime
	}
	return ""
}

func (m *ContestListSubmissionsResponse_PerLine) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ContestListSubmissionsResponse_PerLine) GetIsSpj() bool {
	if m != nil {
		return m.IsSpj
	}
	return false
}

func init() {
	proto.RegisterType((*ContestListSubmissionsRequest)(nil), "api.ContestListSubmissionsRequest")
	proto.RegisterType((*ContestListSubmissionsResponse)(nil), "api.ContestListSubmissionsResponse")
	proto.RegisterType((*ContestListSubmissionsResponse_PerLine)(nil), "api.ContestListSubmissionsResponse.PerLine")
}

func init() { proto.RegisterFile("api/contest_list_submissions.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x93, 0xdb, 0x6e, 0x13, 0x31,
	0x10, 0x86, 0x95, 0xa6, 0x9b, 0xc3, 0xa4, 0x27, 0x59, 0x40, 0x97, 0x70, 0x0a, 0xbd, 0x21, 0x15,
	0x28, 0x48, 0xe5, 0x09, 0x50, 0xe1, 0xa2, 0x52, 0x2e, 0xaa, 0x2d, 0xbd, 0xb6, 0xdc, 0xdd, 0x69,
	0x70, 0xb5, 0x6b, 0x1b, 0x8f, 0xf7, 0x82, 0xb7, 0xe2, 0x19, 0xe0, 0xc5, 0x90, 0xc7, 0xdb, 0x34,
	0x10, 0xc1, 0x5d, 0xfc, 0xcd, 0xbf, 0xe3, 0x99, 0xff, 0x77, 0xe0, 0x44, 0x39, 0xfd, 0xbe, 0xb4,
	0x26, 0x20, 0x05, 0x59, 0x6b, 0x0a, 0x92, 0xda, 0x9b, 0x46, 0x13, 0x69, 0x6b, 0x68, 0xe1, 0xbc,
	0x0d, 0x56, 0xf4, 0x95, 0xd3, 0xd3, 0xa3, 0x24, 0x6c, 0x1a, 0x6b, 0x12, 0x9e, 0x8a, 0x48, 0x6a,
	0x65, 0x56, 0xad, 0x5a, 0x61, 0x62, 0x27, 0x3f, 0x77, 0xe0, 0xc5, 0x79, 0xea, 0xb6, 0xd4, 0x14,
	0xae, 0x1e, 0x7a, 0x15, 0xf8, 0xad, 0x45, 0x0a, 0xe2, 0x29, 0x8c, 0x1c, 0x7a, 0xe9, 0xd4, 0x0a,
	0xf3, 0xde, 0xac, 0x37, 0xcf, 0x8a, 0xa1, 0x43, 0x7f, 0xa9, 0x56, 0x28, 0x5e, 0xc3, 0x5e, 0xd9,
	0x7a, 0x8f, 0x26, 0xa4, 0xf2, 0x0e, 0x97, 0x27, 0x1d, 0x63, 0xc9, 0x1b, 0x38, 0xbc, 0xd5, 0x75,
	0x40, 0x2f, 0x5b, 0x42, 0x6f, 0x54, 0x83, 0x79, 0x7f, 0xd6, 0x9b, 0x8f, 0x8b, 0x83, 0x84, 0xaf,
	0x3b, 0x1a, 0x7b, 0x75, 0xc2, 0x5a, 0xdd, 0x60, 0x9d, 0xef, 0xb2, 0x6a, 0x92, 0xd8, 0x32, 0x22,
	0xf1, 0x0e, 0x44, 0x27, 0xa1, 0xa0, 0x42, 0x4b, 0xb2, 0xb4, 0x15, 0xe6, 0x19, 0x0b, 0x8f, 0x52,
	0xe5, 0x8a, 0x0b, 0xe7, 0xb6, 0xda, 0xbc, 0xf9, 0x7e, 0xe5, 0x7c, 0xb0, 0x79, 0xf3, 0xb2, 0xa3,
	0x1b, 0xc2, 0xd2, 0x36, 0x4e, 0xd7, 0xe8, 0xf3, 0xe1, 0xa6, 0xf0, 0xbc, 0xa3, 0xe2, 0x18, 0x86,
	0x9a, 0x64, 0x85, 0x54, 0xe6, 0xa3, 0x59, 0x6f, 0x3e, 0x2a, 0x06, 0x9a, 0x3e, 0x21, 0x95, 0x27,
	0x3f, 0x32, 0x78, 0xf9, 0x2f, 0x13, 0xc9, 0x59, 0x43, 0x28, 0x3e, 0x42, 0x56, 0x6b, 0x83, 0x94,
	0xf7, 0x66, 0xfd, 0xf9, 0xe4, 0xec, 0xed, 0x42, 0x39, 0xbd, 0xf8, 0xff, 0x37, 0x8b, 0x4b, 0xf4,
	0x4b, 0x6d, 0xb0, 0x48, 0x5f, 0x8a, 0x57, 0x30, 0x09, 0x36, 0xa8, 0x5a, 0xa6, 0x46, 0xc9, 0x6c,
	0x60, 0xb4, 0xfc, 0x53, 0x10, 0xc3, 0x20, 0xf6, 0xf9, 0x5e, 0x10, 0xb3, 0xa0, 0xad, 0xbc, 0x76,
	0xb7, 0xf3, 0x9a, 0x41, 0x86, 0xde, 0x5b, 0xcf, 0xb6, 0x4e, 0xce, 0x80, 0xe7, 0xfc, 0x1c, 0x49,
	0x91, 0x0a, 0xd3, 0x5f, 0x7d, 0x18, 0x76, 0x93, 0x89, 0x47, 0x90, 0xa5, 0xb4, 0x7a, 0x6c, 0x58,
	0x3a, 0x88, 0xc7, 0x30, 0xf0, 0xad, 0x91, 0xba, 0xe2, 0x19, 0xfb, 0x45, 0xe6, 0x5b, 0x73, 0x51,
	0x89, 0x29, 0x8c, 0xfe, 0x7a, 0x03, 0xeb, 0xb3, 0x78, 0x02, 0x83, 0x94, 0x69, 0x97, 0x7b, 0x77,
	0x8a, 0x2b, 0x6d, 0x67, 0x0d, 0xf4, 0x90, 0xf2, 0x31, 0x0c, 0x4b, 0x94, 0xda, 0xdc, 0xda, 0x2e,
	0xdd, 0x41, 0x89, 0x17, 0xe6, 0xd6, 0x8a, 0x53, 0x18, 0xad, 0x73, 0x1f, 0xf2, 0x2e, 0xfb, 0xbc,
	0xcb, 0x7d, 0xec, 0xc5, 0xba, 0x2c, 0x9e, 0xc1, 0x38, 0xe8, 0x06, 0xe3, 0x0b, 0xad, 0x38, 0xd9,
	0xac, 0x18, 0x45, 0x70, 0x4d, 0x58, 0xc5, 0x09, 0x1a, 0x6c, 0xac, 0xff, 0x9e, 0xca, 0xe3, 0x64,
	0x6a, 0x42, 0x2c, 0x78, 0x0e, 0xe3, 0x18, 0x62, 0xa9, 0x08, 0x29, 0x07, 0x2e, 0x3f, 0x00, 0x71,
	0x0a, 0x47, 0xeb, 0x83, 0x74, 0x8a, 0x62, 0x8f, 0x09, 0x8b, 0x0e, 0xd7, 0xfc, 0x92, 0x71, 0xbc,
	0x29, 0x2e, 0x29, 0x6b, 0x34, 0xab, 0xf0, 0x35, 0xdf, 0x4b, 0x37, 0x45, 0xb4, 0x64, 0xc2, 0x66,
	0xc4, 0x67, 0x12, 0x64, 0x9c, 0x2e, 0xdf, 0xef, 0xcc, 0x60, 0xf4, 0x45, 0x37, 0x28, 0x04, 0xec,
	0xb2, 0x4d, 0x07, 0x5c, 0xe1, 0xdf, 0x31, 0x0c, 0x4d, 0x92, 0xdc, 0x5d, 0x7e, 0xc8, 0x6f, 0x36,
	0xd3, 0x74, 0xe5, 0xee, 0x6e, 0x06, 0xfc, 0xf7, 0xff, 0xf0, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x15,
	0xe8, 0xcd, 0xbb, 0x4f, 0x04, 0x00, 0x00,
}
