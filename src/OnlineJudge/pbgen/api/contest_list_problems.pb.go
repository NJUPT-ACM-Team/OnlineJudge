// Code generated by protoc-gen-go.
// source: api/contest_list_problems.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ContestListProblemsRequest struct {
	ContestId int64 `protobuf:"varint,1,opt,name=contest_id,json=contestId" json:"contest_id,omitempty"`
}

func (m *ContestListProblemsRequest) Reset()                    { *m = ContestListProblemsRequest{} }
func (m *ContestListProblemsRequest) String() string            { return proto.CompactTextString(m) }
func (*ContestListProblemsRequest) ProtoMessage()               {}
func (*ContestListProblemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *ContestListProblemsRequest) GetContestId() int64 {
	if m != nil {
		return m.ContestId
	}
	return 0
}

type ContestListProblemsResponse struct {
	Lines []*ContestListProblemsResponse_PerLine `protobuf:"bytes,1,rep,name=lines" json:"lines,omitempty"`
	Error *Error                                 `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *ContestListProblemsResponse) Reset()                    { *m = ContestListProblemsResponse{} }
func (m *ContestListProblemsResponse) String() string            { return proto.CompactTextString(m) }
func (*ContestListProblemsResponse) ProtoMessage()               {}
func (*ContestListProblemsResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *ContestListProblemsResponse) GetLines() []*ContestListProblemsResponse_PerLine {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *ContestListProblemsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ContestListProblemsResponse_PerLine struct {
	Label           string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Alias           string `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
	AcSubmission    int32  `protobuf:"varint,3,opt,name=ac_submission,json=acSubmission" json:"ac_submission,omitempty"`
	TotalSubmission int32  `protobuf:"varint,4,opt,name=total_submission,json=totalSubmission" json:"total_submission,omitempty"`
	// only used by users in contest
	Status string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	// only used by admin or contest owner
	Sid   string `protobuf:"bytes,6,opt,name=sid" json:"sid,omitempty"`
	Title string `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
}

func (m *ContestListProblemsResponse_PerLine) Reset()         { *m = ContestListProblemsResponse_PerLine{} }
func (m *ContestListProblemsResponse_PerLine) String() string { return proto.CompactTextString(m) }
func (*ContestListProblemsResponse_PerLine) ProtoMessage()    {}
func (*ContestListProblemsResponse_PerLine) Descriptor() ([]byte, []int) {
	return fileDescriptor3, []int{1, 0}
}

func (m *ContestListProblemsResponse_PerLine) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *ContestListProblemsResponse_PerLine) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *ContestListProblemsResponse_PerLine) GetAcSubmission() int32 {
	if m != nil {
		return m.AcSubmission
	}
	return 0
}

func (m *ContestListProblemsResponse_PerLine) GetTotalSubmission() int32 {
	if m != nil {
		return m.TotalSubmission
	}
	return 0
}

func (m *ContestListProblemsResponse_PerLine) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ContestListProblemsResponse_PerLine) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *ContestListProblemsResponse_PerLine) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*ContestListProblemsRequest)(nil), "api.ContestListProblemsRequest")
	proto.RegisterType((*ContestListProblemsResponse)(nil), "api.ContestListProblemsResponse")
	proto.RegisterType((*ContestListProblemsResponse_PerLine)(nil), "api.ContestListProblemsResponse.PerLine")
}

func init() { proto.RegisterFile("api/contest_list_problems.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0x33, 0x31,
	0x10, 0x86, 0xd9, 0xee, 0xb7, 0x2d, 0x9d, 0x7e, 0x62, 0x09, 0x22, 0xa1, 0x22, 0x2e, 0xf5, 0xb2,
	0x5e, 0x56, 0xa8, 0x47, 0xc1, 0x8b, 0x78, 0x10, 0x7a, 0x28, 0xf1, 0x07, 0x94, 0x6c, 0x9b, 0xc3,
	0x40, 0x76, 0x13, 0x33, 0xb3, 0x3f, 0x51, 0xfc, 0x5b, 0xb2, 0xc9, 0x2a, 0x3d, 0x88, 0xb7, 0xbc,
	0x4f, 0xde, 0x67, 0x32, 0x10, 0xb8, 0xd1, 0x1e, 0xef, 0x0f, 0xae, 0x63, 0x43, 0xbc, 0xb7, 0x48,
	0xbc, 0xf7, 0xc1, 0x35, 0xd6, 0xb4, 0x54, 0xfb, 0xe0, 0xd8, 0x89, 0x5c, 0x7b, 0x5c, 0x2d, 0x53,
	0xab, 0x6d, 0x5d, 0x97, 0xf0, 0xfa, 0x11, 0x56, 0xcf, 0xc9, 0xda, 0x22, 0xf1, 0x6e, 0x74, 0x94,
	0x79, 0xef, 0x0d, 0xb1, 0xb8, 0x06, 0xf8, 0x9e, 0x89, 0x47, 0x99, 0x95, 0x59, 0x95, 0xab, 0xf9,
	0x48, 0x5e, 0x8f, 0xeb, 0xcf, 0x09, 0x5c, 0xfd, 0x6a, 0x93, 0x77, 0x1d, 0x19, 0xf1, 0x04, 0x85,
	0xc5, 0xce, 0x90, 0xcc, 0xca, 0xbc, 0x5a, 0x6c, 0xaa, 0x5a, 0x7b, 0xac, 0xff, 0x10, 0xea, 0x9d,
	0x09, 0x5b, 0xec, 0x8c, 0x4a, 0x9a, 0x28, 0xa1, 0x30, 0x21, 0xb8, 0x20, 0x27, 0x65, 0x56, 0x2d,
	0x36, 0x10, 0xfd, 0x97, 0x81, 0xa8, 0x74, 0xb1, 0xfa, 0xc8, 0x60, 0x36, 0x4a, 0xe2, 0x02, 0x0a,
	0xab, 0x1b, 0x63, 0xe3, 0x9e, 0x73, 0x95, 0xc2, 0x40, 0xb5, 0x45, 0x4d, 0x71, 0xc6, 0x5c, 0xa5,
	0x20, 0x6e, 0xe1, 0x4c, 0x1f, 0xf6, 0xd4, 0x37, 0x2d, 0x12, 0xa1, 0xeb, 0x64, 0x5e, 0x66, 0x55,
	0xa1, 0xfe, 0xeb, 0xc3, 0xdb, 0x0f, 0x13, 0x77, 0xb0, 0x64, 0xc7, 0xda, 0x9e, 0xf6, 0xfe, 0xc5,
	0xde, 0x79, 0xe4, 0x27, 0xd5, 0x4b, 0x98, 0x12, 0x6b, 0xee, 0x49, 0x16, 0xf1, 0x99, 0x31, 0x89,
	0x25, 0xe4, 0x84, 0x47, 0x39, 0x8d, 0x70, 0x38, 0x0e, 0xfb, 0x30, 0xb2, 0x35, 0x72, 0x96, 0xf6,
	0x89, 0xa1, 0x99, 0xc6, 0xdf, 0x78, 0xf8, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x5e, 0x4d, 0x3b,
	0xc7, 0x01, 0x00, 0x00,
}
