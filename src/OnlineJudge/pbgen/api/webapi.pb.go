// Code generated by protoc-gen-go.
// source: api/webapi.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type WebGetRequest struct {
	ListProblemsRequest           *ListProblemsRequest           `protobuf:"bytes,1,opt,name=list_problems_request,json=listProblemsRequest" json:"list_problems_request,omitempty"`
	ListSubmissionsRequest        *ListSubmissionsRequest        `protobuf:"bytes,2,opt,name=list_submissions_request,json=listSubmissionsRequest" json:"list_submissions_request,omitempty"`
	ListContestsRequest           *ListContestsRequest           `protobuf:"bytes,3,opt,name=list_contests_request,json=listContestsRequest" json:"list_contests_request,omitempty"`
	ShowProblemRequest            *ShowProblemRequest            `protobuf:"bytes,4,opt,name=show_problem_request,json=showProblemRequest" json:"show_problem_request,omitempty"`
	AboutRequest                  *AboutRequest                  `protobuf:"bytes,5,opt,name=about_request,json=aboutRequest" json:"about_request,omitempty"`
	ContestShowRequest            *ContestShowRequest            `protobuf:"bytes,6,opt,name=contest_show_request,json=contestShowRequest" json:"contest_show_request,omitempty"`
	ContestListProblemsRequest    *ContestListProblemsRequest    `protobuf:"bytes,7,opt,name=contest_list_problems_request,json=contestListProblemsRequest" json:"contest_list_problems_request,omitempty"`
	ContestListSubmissionsRequest *ContestListSubmissionsRequest `protobuf:"bytes,8,opt,name=contest_list_submissions_request,json=contestListSubmissionsRequest" json:"contest_list_submissions_request,omitempty"`
	ContestRanklistRequest        *ContestRanklistRequest        `protobuf:"bytes,9,opt,name=contest_ranklist_request,json=contestRanklistRequest" json:"contest_ranklist_request,omitempty"`
}

func (m *WebGetRequest) Reset()                    { *m = WebGetRequest{} }
func (m *WebGetRequest) String() string            { return proto.CompactTextString(m) }
func (*WebGetRequest) ProtoMessage()               {}
func (*WebGetRequest) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0} }

func (m *WebGetRequest) GetListProblemsRequest() *ListProblemsRequest {
	if m != nil {
		return m.ListProblemsRequest
	}
	return nil
}

func (m *WebGetRequest) GetListSubmissionsRequest() *ListSubmissionsRequest {
	if m != nil {
		return m.ListSubmissionsRequest
	}
	return nil
}

func (m *WebGetRequest) GetListContestsRequest() *ListContestsRequest {
	if m != nil {
		return m.ListContestsRequest
	}
	return nil
}

func (m *WebGetRequest) GetShowProblemRequest() *ShowProblemRequest {
	if m != nil {
		return m.ShowProblemRequest
	}
	return nil
}

func (m *WebGetRequest) GetAboutRequest() *AboutRequest {
	if m != nil {
		return m.AboutRequest
	}
	return nil
}

func (m *WebGetRequest) GetContestShowRequest() *ContestShowRequest {
	if m != nil {
		return m.ContestShowRequest
	}
	return nil
}

func (m *WebGetRequest) GetContestListProblemsRequest() *ContestListProblemsRequest {
	if m != nil {
		return m.ContestListProblemsRequest
	}
	return nil
}

func (m *WebGetRequest) GetContestListSubmissionsRequest() *ContestListSubmissionsRequest {
	if m != nil {
		return m.ContestListSubmissionsRequest
	}
	return nil
}

func (m *WebGetRequest) GetContestRanklistRequest() *ContestRanklistRequest {
	if m != nil {
		return m.ContestRanklistRequest
	}
	return nil
}

// WebRequest are all POST requests
type WebPostRequest struct {
	CsrfToken          string              `protobuf:"bytes,1,opt,name=csrf_token,json=csrfToken" json:"csrf_token,omitempty"`
	Captcha            string              `protobuf:"bytes,2,opt,name=captcha" json:"captcha,omitempty"`
	LoginInitRequest   *LoginInitRequest   `protobuf:"bytes,3,opt,name=login_init_request,json=loginInitRequest" json:"login_init_request,omitempty"`
	LoginAuthRequest   *LoginAuthRequest   `protobuf:"bytes,4,opt,name=login_auth_request,json=loginAuthRequest" json:"login_auth_request,omitempty"`
	RegisterRequest    *RegisterRequest    `protobuf:"bytes,5,opt,name=register_request,json=registerRequest" json:"register_request,omitempty"`
	SubmitRequest      *SubmitRequest      `protobuf:"bytes,6,opt,name=submit_request,json=submitRequest" json:"submit_request,omitempty"`
	LogoutRequest      *LogoutRequest      `protobuf:"bytes,7,opt,name=logout_request,json=logoutRequest" json:"logout_request,omitempty"`
	ContestSaveRequest *ContestSaveRequest `protobuf:"bytes,8,opt,name=contest_save_request,json=contestSaveRequest" json:"contest_save_request,omitempty"`
	ContestAuthRequest *ContestAuthRequest `protobuf:"bytes,9,opt,name=contest_auth_request,json=contestAuthRequest" json:"contest_auth_request,omitempty"`
	ReJudgeRequest     *ReJudgeRequest     `protobuf:"bytes,10,opt,name=re_judge_request,json=reJudgeRequest" json:"re_judge_request,omitempty"`
	SaveProblemRequest *SaveProblemRequest `protobuf:"bytes,11,opt,name=save_problem_request,json=saveProblemRequest" json:"save_problem_request,omitempty"`
}

func (m *WebPostRequest) Reset()                    { *m = WebPostRequest{} }
func (m *WebPostRequest) String() string            { return proto.CompactTextString(m) }
func (*WebPostRequest) ProtoMessage()               {}
func (*WebPostRequest) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{1} }

func (m *WebPostRequest) GetCsrfToken() string {
	if m != nil {
		return m.CsrfToken
	}
	return ""
}

func (m *WebPostRequest) GetCaptcha() string {
	if m != nil {
		return m.Captcha
	}
	return ""
}

func (m *WebPostRequest) GetLoginInitRequest() *LoginInitRequest {
	if m != nil {
		return m.LoginInitRequest
	}
	return nil
}

func (m *WebPostRequest) GetLoginAuthRequest() *LoginAuthRequest {
	if m != nil {
		return m.LoginAuthRequest
	}
	return nil
}

func (m *WebPostRequest) GetRegisterRequest() *RegisterRequest {
	if m != nil {
		return m.RegisterRequest
	}
	return nil
}

func (m *WebPostRequest) GetSubmitRequest() *SubmitRequest {
	if m != nil {
		return m.SubmitRequest
	}
	return nil
}

func (m *WebPostRequest) GetLogoutRequest() *LogoutRequest {
	if m != nil {
		return m.LogoutRequest
	}
	return nil
}

func (m *WebPostRequest) GetContestSaveRequest() *ContestSaveRequest {
	if m != nil {
		return m.ContestSaveRequest
	}
	return nil
}

func (m *WebPostRequest) GetContestAuthRequest() *ContestAuthRequest {
	if m != nil {
		return m.ContestAuthRequest
	}
	return nil
}

func (m *WebPostRequest) GetReJudgeRequest() *ReJudgeRequest {
	if m != nil {
		return m.ReJudgeRequest
	}
	return nil
}

func (m *WebPostRequest) GetSaveProblemRequest() *SaveProblemRequest {
	if m != nil {
		return m.SaveProblemRequest
	}
	return nil
}

type WebResponse struct {
	SetCsrfToken                   string                          `protobuf:"bytes,1,opt,name=set_csrf_token,json=setCsrfToken" json:"set_csrf_token,omitempty"`
	CaptchaUrl                     string                          `protobuf:"bytes,2,opt,name=captcha_url,json=captchaUrl" json:"captcha_url,omitempty"`
	ListProblemsResponse           *ListProblemsResponse           `protobuf:"bytes,3,opt,name=list_problems_response,json=listProblemsResponse" json:"list_problems_response,omitempty"`
	ListSubmissionsResponse        *ListSubmissionsResponse        `protobuf:"bytes,4,opt,name=list_submissions_response,json=listSubmissionsResponse" json:"list_submissions_response,omitempty"`
	ListContestsResponse           *ListContestsResponse           `protobuf:"bytes,5,opt,name=list_contests_response,json=listContestsResponse" json:"list_contests_response,omitempty"`
	LoginInitResponse              *LoginInitResponse              `protobuf:"bytes,6,opt,name=login_init_response,json=loginInitResponse" json:"login_init_response,omitempty"`
	LoginAuthResponse              *LoginAuthResponse              `protobuf:"bytes,7,opt,name=login_auth_response,json=loginAuthResponse" json:"login_auth_response,omitempty"`
	RegisterResponse               *RegisterResponse               `protobuf:"bytes,8,opt,name=register_response,json=registerResponse" json:"register_response,omitempty"`
	ShowProblemResponse            *ShowProblemResponse            `protobuf:"bytes,9,opt,name=show_problem_response,json=showProblemResponse" json:"show_problem_response,omitempty"`
	SubmitResponse                 *SubmitResponse                 `protobuf:"bytes,10,opt,name=submit_response,json=submitResponse" json:"submit_response,omitempty"`
	AboutResponse                  *AboutResponse                  `protobuf:"bytes,11,opt,name=about_response,json=aboutResponse" json:"about_response,omitempty"`
	LogoutResponse                 *LogoutResponse                 `protobuf:"bytes,12,opt,name=logout_response,json=logoutResponse" json:"logout_response,omitempty"`
	ContestShowResponse            *ContestShowResponse            `protobuf:"bytes,13,opt,name=contest_show_response,json=contestShowResponse" json:"contest_show_response,omitempty"`
	ContestSaveResponse            *ContestSaveResponse            `protobuf:"bytes,14,opt,name=contest_save_response,json=contestSaveResponse" json:"contest_save_response,omitempty"`
	ContestListProblemsResponse    *ContestListProblemsResponse    `protobuf:"bytes,15,opt,name=contest_list_problems_response,json=contestListProblemsResponse" json:"contest_list_problems_response,omitempty"`
	ContestAuthResponse            *ContestAuthResponse            `protobuf:"bytes,16,opt,name=contest_auth_response,json=contestAuthResponse" json:"contest_auth_response,omitempty"`
	ContestListSubmissionsResponse *ContestListSubmissionsResponse `protobuf:"bytes,17,opt,name=contest_list_submissions_response,json=contestListSubmissionsResponse" json:"contest_list_submissions_response,omitempty"`
	ContestRanklistResponse        *ContestRanklistResponse        `protobuf:"bytes,18,opt,name=contest_ranklist_response,json=contestRanklistResponse" json:"contest_ranklist_response,omitempty"`
	ReJudgeResponse                *ReJudgeResponse                `protobuf:"bytes,19,opt,name=re_judge_response,json=reJudgeResponse" json:"re_judge_response,omitempty"`
	SaveProblemResponse            *SaveProblemResponse            `protobuf:"bytes,20,opt,name=save_problem_response,json=saveProblemResponse" json:"save_problem_response,omitempty"`
	Error                          *Error                          `protobuf:"bytes,21,opt,name=error" json:"error,omitempty"`
}

func (m *WebResponse) Reset()                    { *m = WebResponse{} }
func (m *WebResponse) String() string            { return proto.CompactTextString(m) }
func (*WebResponse) ProtoMessage()               {}
func (*WebResponse) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{2} }

func (m *WebResponse) GetSetCsrfToken() string {
	if m != nil {
		return m.SetCsrfToken
	}
	return ""
}

func (m *WebResponse) GetCaptchaUrl() string {
	if m != nil {
		return m.CaptchaUrl
	}
	return ""
}

func (m *WebResponse) GetListProblemsResponse() *ListProblemsResponse {
	if m != nil {
		return m.ListProblemsResponse
	}
	return nil
}

func (m *WebResponse) GetListSubmissionsResponse() *ListSubmissionsResponse {
	if m != nil {
		return m.ListSubmissionsResponse
	}
	return nil
}

func (m *WebResponse) GetListContestsResponse() *ListContestsResponse {
	if m != nil {
		return m.ListContestsResponse
	}
	return nil
}

func (m *WebResponse) GetLoginInitResponse() *LoginInitResponse {
	if m != nil {
		return m.LoginInitResponse
	}
	return nil
}

func (m *WebResponse) GetLoginAuthResponse() *LoginAuthResponse {
	if m != nil {
		return m.LoginAuthResponse
	}
	return nil
}

func (m *WebResponse) GetRegisterResponse() *RegisterResponse {
	if m != nil {
		return m.RegisterResponse
	}
	return nil
}

func (m *WebResponse) GetShowProblemResponse() *ShowProblemResponse {
	if m != nil {
		return m.ShowProblemResponse
	}
	return nil
}

func (m *WebResponse) GetSubmitResponse() *SubmitResponse {
	if m != nil {
		return m.SubmitResponse
	}
	return nil
}

func (m *WebResponse) GetAboutResponse() *AboutResponse {
	if m != nil {
		return m.AboutResponse
	}
	return nil
}

func (m *WebResponse) GetLogoutResponse() *LogoutResponse {
	if m != nil {
		return m.LogoutResponse
	}
	return nil
}

func (m *WebResponse) GetContestShowResponse() *ContestShowResponse {
	if m != nil {
		return m.ContestShowResponse
	}
	return nil
}

func (m *WebResponse) GetContestSaveResponse() *ContestSaveResponse {
	if m != nil {
		return m.ContestSaveResponse
	}
	return nil
}

func (m *WebResponse) GetContestListProblemsResponse() *ContestListProblemsResponse {
	if m != nil {
		return m.ContestListProblemsResponse
	}
	return nil
}

func (m *WebResponse) GetContestAuthResponse() *ContestAuthResponse {
	if m != nil {
		return m.ContestAuthResponse
	}
	return nil
}

func (m *WebResponse) GetContestListSubmissionsResponse() *ContestListSubmissionsResponse {
	if m != nil {
		return m.ContestListSubmissionsResponse
	}
	return nil
}

func (m *WebResponse) GetContestRanklistResponse() *ContestRanklistResponse {
	if m != nil {
		return m.ContestRanklistResponse
	}
	return nil
}

func (m *WebResponse) GetReJudgeResponse() *ReJudgeResponse {
	if m != nil {
		return m.ReJudgeResponse
	}
	return nil
}

func (m *WebResponse) GetSaveProblemResponse() *SaveProblemResponse {
	if m != nil {
		return m.SaveProblemResponse
	}
	return nil
}

func (m *WebResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*WebGetRequest)(nil), "api.WebGetRequest")
	proto.RegisterType((*WebPostRequest)(nil), "api.WebPostRequest")
	proto.RegisterType((*WebResponse)(nil), "api.WebResponse")
}

func init() { proto.RegisterFile("api/webapi.proto", fileDescriptor22) }

var fileDescriptor22 = []byte{
	// 980 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x96, 0x5f, 0x8f, 0x1b, 0x35,
	0x14, 0xc5, 0x55, 0x4a, 0xba, 0x8d, 0xb3, 0xf9, 0xe7, 0xec, 0x9f, 0x34, 0x65, 0xbb, 0x21, 0xf0,
	0xc0, 0x53, 0x91, 0x40, 0x42, 0x42, 0x02, 0x41, 0x59, 0x01, 0x2a, 0xaa, 0x44, 0x35, 0xa5, 0x5a,
	0xde, 0x46, 0x33, 0x83, 0x49, 0x86, 0x9d, 0x8c, 0x83, 0xed, 0x24, 0xdf, 0x89, 0x0f, 0x88, 0x78,
	0x44, 0xf6, 0x5c, 0x3b, 0xd7, 0xf6, 0x24, 0x8f, 0x3e, 0xd7, 0xfe, 0xf9, 0x8e, 0x73, 0x7c, 0x1c,
	0x32, 0xca, 0x36, 0xe5, 0xe7, 0x7b, 0x96, 0x67, 0x9b, 0xf2, 0xe5, 0x46, 0x70, 0xc5, 0xe9, 0xe3,
	0x6c, 0x53, 0xce, 0x8c, 0x5c, 0xf0, 0xf5, 0x9a, 0xd7, 0x8d, 0x3c, 0xbb, 0xd6, 0x4a, 0x55, 0x4a,
	0x95, 0x6e, 0x04, 0xcf, 0x2b, 0xb6, 0x96, 0x50, 0x98, 0xb9, 0x82, 0xdc, 0xe6, 0xeb, 0x52, 0xca,
	0x92, 0xd7, 0x32, 0x5a, 0x54, 0xf0, 0x5a, 0x31, 0xa9, 0x6c, 0xe1, 0xaa, 0xe1, 0x1b, 0x2d, 0x95,
	0xd9, 0x8e, 0x81, 0x3e, 0x34, 0x0b, 0xf8, 0xb2, 0xb4, 0xdb, 0x52, 0x2d, 0x08, 0xb6, 0x2c, 0xa5,
	0x62, 0x02, 0x2f, 0x96, 0x2b, 0xbe, 0xb7, 0xad, 0xb4, 0x42, 0x57, 0x7c, 0x0f, 0xba, 0xf9, 0x18,
	0xd3, 0x9c, 0xc2, 0xdb, 0x64, 0x39, 0xdf, 0x2a, 0x3c, 0xa5, 0xe2, 0xcb, 0x83, 0x72, 0x8b, 0x61,
	0x6d, 0xdf, 0xed, 0xed, 0x96, 0x6d, 0xd5, 0x0a, 0xf4, 0x45, 0xb4, 0x30, 0x3e, 0x97, 0x19, 0x9e,
	0x23, 0xb2, 0xfa, 0x41, 0xcf, 0x83, 0xda, 0xb8, 0xf9, 0xe2, 0xbf, 0xb6, 0x7f, 0x2c, 0x99, 0xf7,
	0xc1, 0xd9, 0x8e, 0xf9, 0x1f, 0xbc, 0xf8, 0xaf, 0x43, 0xfa, 0xf7, 0x2c, 0xff, 0x99, 0xa9, 0x84,
	0xfd, 0xbd, 0x65, 0x52, 0xd1, 0x37, 0xe4, 0xd2, 0xeb, 0x35, 0x15, 0x4d, 0x61, 0xfa, 0x68, 0xfe,
	0xe8, 0xb3, 0xde, 0x17, 0xd3, 0x97, 0xfa, 0x77, 0x7e, 0x53, 0x4a, 0xf5, 0x16, 0x26, 0xc0, 0xc2,
	0x64, 0x52, 0xc5, 0x22, 0x7d, 0x4f, 0xa6, 0xe1, 0x07, 0x38, 0xe0, 0x07, 0x06, 0xf8, 0xdc, 0x01,
	0xdf, 0x1d, 0xe6, 0x58, 0xe6, 0x55, 0xd5, 0xaa, 0xbb, 0x26, 0xad, 0x27, 0x1c, 0xf3, 0x71, 0xd0,
	0xe4, 0x1d, 0x4c, 0xf0, 0x9a, 0x0c, 0x44, 0xfa, 0x9a, 0x5c, 0x60, 0x2f, 0x38, 0xd8, 0x87, 0x06,
	0x76, 0x6d, 0x60, 0xef, 0x56, 0x7c, 0x0f, 0x1f, 0x67, 0x59, 0x54, 0x46, 0x1a, 0xfd, 0x8a, 0xf4,
	0x8d, 0x29, 0x1c, 0xa3, 0x63, 0x18, 0x63, 0xc3, 0x78, 0xa5, 0x2b, 0x76, 0xf5, 0x79, 0x86, 0x46,
	0xba, 0x05, 0x6c, 0x3b, 0xb7, 0xfc, 0x09, 0x6a, 0x01, 0xda, 0xd6, 0x9d, 0xb8, 0x16, 0x8a, 0x48,
	0xa3, 0x39, 0xb9, 0x69, 0x35, 0x9d, 0x63, 0x9e, 0x19, 0xe6, 0x2d, 0x66, 0xb6, 0xfd, 0x9e, 0xb3,
	0xe2, 0x68, 0x8d, 0x3e, 0x90, 0xf9, 0x31, 0x7f, 0xba, 0x6d, 0x9e, 0x9a, 0x6d, 0x16, 0xe1, 0x36,
	0x2d, 0xbf, 0xf2, 0x4d, 0x71, 0xaa, 0xac, 0x3d, 0x14, 0x1a, 0xdd, 0x6d, 0xd2, 0x45, 0x1e, 0x82,
	0x4d, 0x12, 0x98, 0xe3, 0x3c, 0x54, 0xb4, 0xea, 0x8b, 0x7f, 0x3a, 0x64, 0x70, 0xcf, 0xf2, 0xb7,
	0xdc, 0x49, 0xf4, 0x86, 0x90, 0x42, 0x8a, 0x3f, 0x53, 0xc5, 0x1f, 0x58, 0x6d, 0x0c, 0xdf, 0x4d,
	0xba, 0x5a, 0xf9, 0x4d, 0x0b, 0x74, 0x4a, 0xce, 0x8a, 0x6c, 0xa3, 0x8a, 0x55, 0x66, 0xbc, 0xdb,
	0x4d, 0xec, 0x90, 0xde, 0x11, 0x6a, 0x22, 0x27, 0x2d, 0xeb, 0x52, 0x05, 0x66, 0xbc, 0x6c, 0xcc,
	0xa8, 0xcb, 0xaf, 0xeb, 0xd2, 0xb5, 0x35, 0xaa, 0x02, 0xe5, 0x00, 0xd1, 0x51, 0x10, 0x98, 0x10,
	0x41, 0x5e, 0x6d, 0xd5, 0xca, 0x87, 0x20, 0x85, 0x7e, 0x47, 0x46, 0x36, 0xeb, 0x02, 0x0f, 0x5e,
	0x18, 0x44, 0x02, 0x45, 0x4b, 0x18, 0x0a, 0x5f, 0xa0, 0x5f, 0x93, 0x41, 0x13, 0x74, 0x81, 0x07,
	0x69, 0x73, 0x0d, 0x4c, 0xc9, 0x2e, 0xee, 0x4b, 0x3c, 0xd4, 0x4b, 0x9b, 0x00, 0x0c, 0xac, 0x46,
	0x6d, 0xf3, 0xc8, 0xfe, 0xfd, 0x0a, 0x0f, 0x3d, 0xff, 0xeb, 0x94, 0xf2, 0x4d, 0xe4, 0xfb, 0x3f,
	0xdb, 0xb1, 0xc8, 0xff, 0x07, 0x0d, 0xa3, 0xbc, 0x83, 0xec, 0xc6, 0x28, 0x7c, 0x94, 0x16, 0x85,
	0x0f, 0xf3, 0x5b, 0x7d, 0x98, 0xa9, 0xc9, 0x51, 0x87, 0x21, 0x06, 0x33, 0x81, 0xc3, 0xfc, 0x45,
	0xd7, 0x2c, 0x62, 0x20, 0xbc, 0xb1, 0xc9, 0x15, 0x14, 0xb9, 0x0e, 0xd1, 0xc3, 0xb9, 0x92, 0xed,
	0x58, 0x94, 0x2b, 0x91, 0xb6, 0xf8, 0xb7, 0x47, 0x7a, 0xf7, 0x2c, 0x4f, 0x98, 0xdc, 0xf0, 0x5a,
	0x32, 0xfa, 0x29, 0x19, 0x48, 0xa6, 0xd2, 0xc8, 0xad, 0xe7, 0x92, 0xa9, 0x3b, 0x67, 0xd8, 0x5b,
	0xd2, 0x03, 0x87, 0xa6, 0x5b, 0x51, 0x81, 0x69, 0x09, 0x48, 0xef, 0x45, 0x45, 0x7f, 0x25, 0x57,
	0x61, 0x46, 0x34, 0x1b, 0x80, 0x77, 0x9f, 0xb5, 0xa4, 0x7d, 0x33, 0x21, 0xb9, 0xa8, 0x5a, 0x54,
	0xfa, 0x3b, 0x79, 0xd6, 0x12, 0x08, 0xc0, 0x6c, 0xac, 0xfc, 0x51, 0x7b, 0xe0, 0x03, 0xf6, 0xba,
	0x6a, 0x2f, 0xb8, 0x56, 0x51, 0xe4, 0x03, 0xb6, 0x13, 0xb4, 0x7a, 0x88, 0x77, 0xdc, 0x6a, 0xa8,
	0xd2, 0x9f, 0xc8, 0xc4, 0xbb, 0xb3, 0x40, 0x6b, 0xdc, 0x7e, 0x15, 0x5e, 0x5a, 0x40, 0x8d, 0xab,
	0x50, 0x3a, 0x70, 0xc0, 0x6d, 0xc0, 0x39, 0x0b, 0x39, 0x8d, 0xb1, 0x3c, 0x0e, 0x96, 0xe8, 0x0f,
	0x64, 0x8c, 0x6e, 0x2e, 0x50, 0x9e, 0xa2, 0xdb, 0x7f, 0xb8, 0xba, 0x00, 0x19, 0x89, 0x40, 0xd1,
	0xef, 0x62, 0xf0, 0x92, 0x01, 0xa7, 0x8b, 0xde, 0x45, 0xef, 0x29, 0x03, 0xd4, 0x44, 0xc6, 0x22,
	0xfd, 0x86, 0x0c, 0x5d, 0x14, 0x00, 0x07, 0xbb, 0xdf, 0x66, 0x01, 0x20, 0x06, 0xd2, 0x1b, 0xeb,
	0x34, 0xb0, 0x4f, 0x21, 0x2c, 0xee, 0xa1, 0x34, 0x80, 0xb7, 0x10, 0xd6, 0xf6, 0x33, 0x3c, 0xd4,
	0x1b, 0xbb, 0x20, 0x81, 0xb5, 0xe7, 0x68, 0x63, 0x9b, 0x24, 0x76, 0xe3, 0xca, 0x1b, 0xeb, 0x43,
	0x08, 0xde, 0x52, 0x60, 0xf4, 0xd1, 0x21, 0x78, 0x8f, 0xa9, 0x3d, 0x84, 0x22, 0x16, 0x3d, 0x5a,
	0x93, 0x4c, 0x40, 0x1b, 0xb4, 0xd0, 0x4c, 0x0c, 0x85, 0x34, 0x24, 0x52, 0x46, 0x5e, 0x1c, 0x7b,
	0x9c, 0x01, 0x3b, 0x34, 0xd8, 0xf9, 0xf1, 0xd7, 0x19, 0xf0, 0xcf, 0x8b, 0xe3, 0x45, 0xdc, 0xb4,
	0xef, 0xca, 0x51, 0xdc, 0xb4, 0xe7, 0xcb, 0x49, 0x11, 0x8b, 0xb4, 0x26, 0x1f, 0x9f, 0x78, 0xed,
	0x81, 0x3c, 0x36, 0xe4, 0x4f, 0x4e, 0x3e, 0xf7, 0xb0, 0xc9, 0x8b, 0xe2, 0x64, 0x5d, 0x87, 0x48,
	0xcb, 0x83, 0x0f, 0xfb, 0x50, 0x14, 0x22, 0xd1, 0x8b, 0x6f, 0x43, 0xa4, 0x68, 0x2f, 0xd0, 0xef,
	0xf5, 0x1d, 0x73, 0x81, 0x0e, 0xc4, 0x89, 0xf7, 0x3c, 0x42, 0x82, 0x03, 0x69, 0x28, 0x7c, 0xc1,
	0xdc, 0x30, 0x3f, 0xd3, 0x81, 0x72, 0x81, 0x6f, 0x18, 0x0e, 0x70, 0x77, 0xc3, 0x62, 0x91, 0xce,
	0x49, 0x87, 0x09, 0xc1, 0xc5, 0xf4, 0xd2, 0xac, 0x26, 0x66, 0xf5, 0x8f, 0x5a, 0x49, 0x9a, 0x42,
	0xfe, 0xc4, 0xfc, 0x4f, 0xff, 0xf2, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xef, 0xf1, 0xea,
	0x66, 0x0d, 0x00, 0x00,
}
