// Code generated by protoc-gen-go.
// source: api/list_contests.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ListContestsRequest_CType int32

const (
	ListContestsRequest_ALLTYPE ListContestsRequest_CType = 0
	ListContestsRequest_ICPC    ListContestsRequest_CType = 1
	ListContestsRequest_OI      ListContestsRequest_CType = 2
	ListContestsRequest_CF      ListContestsRequest_CType = 3
)

var ListContestsRequest_CType_name = map[int32]string{
	0: "ALLTYPE",
	1: "ICPC",
	2: "OI",
	3: "CF",
}
var ListContestsRequest_CType_value = map[string]int32{
	"ALLTYPE": 0,
	"ICPC":    1,
	"OI":      2,
	"CF":      3,
}

func (x ListContestsRequest_CType) String() string {
	return proto.EnumName(ListContestsRequest_CType_name, int32(x))
}
func (ListContestsRequest_CType) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{0, 0} }

type ListContestsRequest_Orderby_Element int32

const (
	ListContestsRequest_CID       ListContestsRequest_Orderby_Element = 0
	ListContestsRequest_TITLE     ListContestsRequest_Orderby_Element = 1
	ListContestsRequest_STARTTIME ListContestsRequest_Orderby_Element = 2
	ListContestsRequest_ENDTIME   ListContestsRequest_Orderby_Element = 3
	ListContestsRequest_STATUS    ListContestsRequest_Orderby_Element = 4
)

var ListContestsRequest_Orderby_Element_name = map[int32]string{
	0: "CID",
	1: "TITLE",
	2: "STARTTIME",
	3: "ENDTIME",
	4: "STATUS",
}
var ListContestsRequest_Orderby_Element_value = map[string]int32{
	"CID":       0,
	"TITLE":     1,
	"STARTTIME": 2,
	"ENDTIME":   3,
	"STATUS":    4,
}

func (x ListContestsRequest_Orderby_Element) String() string {
	return proto.EnumName(ListContestsRequest_Orderby_Element_name, int32(x))
}
func (ListContestsRequest_Orderby_Element) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor6, []int{0, 1}
}

type ListContestsRequest_Filter_Element int32

const (
	ListContestsRequest_ALL     ListContestsRequest_Filter_Element = 0
	ListContestsRequest_PUBLIC  ListContestsRequest_Filter_Element = 1
	ListContestsRequest_PRIVATE ListContestsRequest_Filter_Element = 2
	ListContestsRequest_VIRTUAL ListContestsRequest_Filter_Element = 3
	ListContestsRequest_FORMAL  ListContestsRequest_Filter_Element = 4
)

var ListContestsRequest_Filter_Element_name = map[int32]string{
	0: "ALL",
	1: "PUBLIC",
	2: "PRIVATE",
	3: "VIRTUAL",
	4: "FORMAL",
}
var ListContestsRequest_Filter_Element_value = map[string]int32{
	"ALL":     0,
	"PUBLIC":  1,
	"PRIVATE": 2,
	"VIRTUAL": 3,
	"FORMAL":  4,
}

func (x ListContestsRequest_Filter_Element) String() string {
	return proto.EnumName(ListContestsRequest_Filter_Element_name, int32(x))
}
func (ListContestsRequest_Filter_Element) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor6, []int{0, 2}
}

type ListContestsRequest struct {
	PerPage         int32  `protobuf:"varint,1,opt,name=per_page,json=perPage" json:"per_page,omitempty"`
	CurrentPage     int32  `protobuf:"varint,2,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	OrderBy         string `protobuf:"bytes,3,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	IsDesc          bool   `protobuf:"varint,4,opt,name=is_desc,json=isDesc" json:"is_desc,omitempty"`
	FilterCtype     string `protobuf:"bytes,5,opt,name=filter_ctype,json=filterCtype" json:"filter_ctype,omitempty"`
	FilterIsPublic  string `protobuf:"bytes,6,opt,name=filter_is_public,json=filterIsPublic" json:"filter_is_public,omitempty"`
	FilterIsVirtual string `protobuf:"bytes,7,opt,name=filter_is_virtual,json=filterIsVirtual" json:"filter_is_virtual,omitempty"`
}

func (m *ListContestsRequest) Reset()                    { *m = ListContestsRequest{} }
func (m *ListContestsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListContestsRequest) ProtoMessage()               {}
func (*ListContestsRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *ListContestsRequest) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *ListContestsRequest) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ListContestsRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *ListContestsRequest) GetIsDesc() bool {
	if m != nil {
		return m.IsDesc
	}
	return false
}

func (m *ListContestsRequest) GetFilterCtype() string {
	if m != nil {
		return m.FilterCtype
	}
	return ""
}

func (m *ListContestsRequest) GetFilterIsPublic() string {
	if m != nil {
		return m.FilterIsPublic
	}
	return ""
}

func (m *ListContestsRequest) GetFilterIsVirtual() string {
	if m != nil {
		return m.FilterIsVirtual
	}
	return ""
}

type ListContestsResponse struct {
	Lines       []*ListContestsResponse_PerLine `protobuf:"bytes,1,rep,name=lines" json:"lines,omitempty"`
	TotalLines  int32                           `protobuf:"varint,2,opt,name=total_lines,json=totalLines" json:"total_lines,omitempty"`
	TotalPages  int32                           `protobuf:"varint,3,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	CurrentPage int32                           `protobuf:"varint,4,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	Error       *Error                          `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
}

func (m *ListContestsResponse) Reset()                    { *m = ListContestsResponse{} }
func (m *ListContestsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListContestsResponse) ProtoMessage()               {}
func (*ListContestsResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *ListContestsResponse) GetLines() []*ListContestsResponse_PerLine {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *ListContestsResponse) GetTotalLines() int32 {
	if m != nil {
		return m.TotalLines
	}
	return 0
}

func (m *ListContestsResponse) GetTotalPages() int32 {
	if m != nil {
		return m.TotalPages
	}
	return 0
}

func (m *ListContestsResponse) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ListContestsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListContestsResponse_PerLine struct {
	ContestId   int64  `protobuf:"varint,1,opt,name=contest_id,json=contestId" json:"contest_id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	StartTime   string `protobuf:"bytes,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime     string `protobuf:"bytes,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Status      string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Access      string `protobuf:"bytes,6,opt,name=access" json:"access,omitempty"`
	ContestType string `protobuf:"bytes,7,opt,name=contest_type,json=contestType" json:"contest_type,omitempty"`
}

func (m *ListContestsResponse_PerLine) Reset()                    { *m = ListContestsResponse_PerLine{} }
func (m *ListContestsResponse_PerLine) String() string            { return proto.CompactTextString(m) }
func (*ListContestsResponse_PerLine) ProtoMessage()               {}
func (*ListContestsResponse_PerLine) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1, 0} }

func (m *ListContestsResponse_PerLine) GetContestId() int64 {
	if m != nil {
		return m.ContestId
	}
	return 0
}

func (m *ListContestsResponse_PerLine) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetContestType() string {
	if m != nil {
		return m.ContestType
	}
	return ""
}

func init() {
	proto.RegisterType((*ListContestsRequest)(nil), "api.ListContestsRequest")
	proto.RegisterType((*ListContestsResponse)(nil), "api.ListContestsResponse")
	proto.RegisterType((*ListContestsResponse_PerLine)(nil), "api.ListContestsResponse.PerLine")
	proto.RegisterEnum("api.ListContestsRequest_CType", ListContestsRequest_CType_name, ListContestsRequest_CType_value)
	proto.RegisterEnum("api.ListContestsRequest_Orderby_Element", ListContestsRequest_Orderby_Element_name, ListContestsRequest_Orderby_Element_value)
	proto.RegisterEnum("api.ListContestsRequest_Filter_Element", ListContestsRequest_Filter_Element_name, ListContestsRequest_Filter_Element_value)
}

func init() { proto.RegisterFile("api/list_contests.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x93, 0xcf, 0x6a, 0xdb, 0x40,
	0x10, 0x87, 0x23, 0xcb, 0xb2, 0xec, 0x51, 0x9b, 0xa8, 0xdb, 0xd0, 0x28, 0x81, 0x52, 0xc7, 0x27,
	0xd3, 0x83, 0x0b, 0xe9, 0xa1, 0x67, 0x45, 0x71, 0x40, 0x54, 0x69, 0x84, 0xb2, 0x31, 0xf4, 0x24,
	0x64, 0x79, 0x1a, 0x16, 0x64, 0x49, 0xdd, 0x5d, 0x17, 0xfc, 0x3e, 0x7d, 0x9b, 0xf6, 0xa1, 0xca,
	0xfe, 0x09, 0x6d, 0x48, 0x4f, 0x66, 0xbe, 0xf9, 0xed, 0x30, 0x62, 0x3e, 0xc3, 0x49, 0xd5, 0xb3,
	0x0f, 0x0d, 0x13, 0xb2, 0xac, 0xbb, 0x56, 0xa2, 0x90, 0x62, 0xd1, 0xf3, 0x4e, 0x76, 0xc4, 0xad,
	0x7a, 0x76, 0x16, 0xaa, 0x6e, 0xdd, 0x6d, 0xb7, 0x5d, 0x6b, 0xf0, 0xec, 0xb7, 0x0b, 0xaf, 0x33,
	0x26, 0x64, 0x62, 0xd3, 0x05, 0x7e, 0xdf, 0xa1, 0x90, 0xe4, 0x14, 0xc6, 0x3d, 0xf2, 0xb2, 0xaf,
	0x1e, 0x30, 0x72, 0xa6, 0xce, 0xdc, 0x2b, 0xfc, 0x1e, 0x79, 0x5e, 0x3d, 0x20, 0x39, 0x87, 0x17,
	0xf5, 0x8e, 0x73, 0x6c, 0xa5, 0x69, 0x0f, 0x74, 0x3b, 0xb0, 0x4c, 0x47, 0x4e, 0x61, 0xdc, 0xf1,
	0x0d, 0xf2, 0x72, 0xbd, 0x8f, 0xdc, 0xa9, 0x33, 0x9f, 0x14, 0xbe, 0xae, 0x2f, 0xf7, 0xe4, 0x04,
	0x7c, 0x26, 0xca, 0x0d, 0x8a, 0x3a, 0x1a, 0x4e, 0x9d, 0xf9, 0xb8, 0x18, 0x31, 0x71, 0x85, 0xa2,
	0x56, 0x63, 0xbf, 0xb1, 0x46, 0x22, 0x2f, 0x6b, 0xb9, 0xef, 0x31, 0xf2, 0xf4, 0xbb, 0xc0, 0xb0,
	0x44, 0x21, 0x32, 0x87, 0xd0, 0x46, 0x98, 0x28, 0xfb, 0xdd, 0xba, 0x61, 0x75, 0x34, 0xd2, 0xb1,
	0x43, 0xc3, 0x53, 0x91, 0x6b, 0x4a, 0xde, 0xc3, 0xab, 0xbf, 0xc9, 0x1f, 0x8c, 0xcb, 0x5d, 0xd5,
	0x44, 0xbe, 0x8e, 0x1e, 0x3d, 0x46, 0x57, 0x06, 0xcf, 0x16, 0xe0, 0x25, 0x54, 0x8d, 0x0f, 0xc0,
	0x8f, 0xb3, 0x8c, 0x7e, 0xcd, 0x97, 0xe1, 0x01, 0x19, 0xc3, 0x30, 0x4d, 0xf2, 0x24, 0x74, 0xc8,
	0x08, 0x06, 0xb7, 0x69, 0x38, 0x50, 0xbf, 0xc9, 0x75, 0xe8, 0xce, 0x6e, 0xe0, 0xe8, 0x56, 0x7d,
	0xcc, 0x7a, 0x5f, 0x2e, 0x1b, 0xdc, 0x62, 0x2b, 0x89, 0x0f, 0x6e, 0x92, 0x5e, 0x85, 0x07, 0x64,
	0x02, 0x1e, 0x4d, 0x69, 0xb6, 0x0c, 0x1d, 0xf2, 0x12, 0x26, 0x77, 0x34, 0x2e, 0x28, 0x4d, 0x6f,
	0x96, 0xe1, 0x40, 0x0d, 0x5f, 0x7e, 0xb9, 0xd2, 0x85, 0x4b, 0x00, 0x46, 0x77, 0x34, 0xa6, 0xf7,
	0x77, 0xe1, 0x70, 0xf6, 0x19, 0x0e, 0xaf, 0xcd, 0xaa, 0xff, 0x4c, 0x8b, 0xb3, 0x2c, 0x3c, 0x50,
	0xb1, 0xfc, 0xfe, 0x32, 0x4b, 0xd5, 0x16, 0x01, 0xf8, 0x79, 0x91, 0xae, 0x62, 0x6a, 0x87, 0xad,
	0xd2, 0x82, 0xde, 0xc7, 0x99, 0x19, 0x76, 0x7d, 0x5b, 0xdc, 0xc4, 0x59, 0x38, 0x9c, 0xfd, 0x74,
	0xe1, 0xf8, 0xe9, 0x39, 0x45, 0xdf, 0xb5, 0x02, 0xc9, 0x27, 0xf0, 0x1a, 0xd6, 0xa2, 0x88, 0x9c,
	0xa9, 0x3b, 0x0f, 0x2e, 0xce, 0x17, 0x55, 0xcf, 0x16, 0xff, 0x4b, 0x2e, 0x72, 0xe4, 0x19, 0x6b,
	0xb1, 0x30, 0x79, 0xf2, 0x0e, 0x02, 0xd9, 0xc9, 0xaa, 0x29, 0xcd, 0x73, 0x73, 0x6c, 0xd0, 0x28,
	0x7b, 0x1a, 0x50, 0x32, 0x08, 0x7d, 0xee, 0xc7, 0x80, 0x72, 0x41, 0x3c, 0xf3, 0x65, 0xf8, 0xdc,
	0x97, 0x29, 0x78, 0xc8, 0x79, 0xc7, 0xf5, 0xd1, 0x83, 0x0b, 0xd0, 0xdb, 0x2d, 0x15, 0x29, 0x4c,
	0xe3, 0xec, 0x97, 0x03, 0xbe, 0xdd, 0x8c, 0xbc, 0x05, 0xb0, 0x72, 0x97, 0x6c, 0xa3, 0xed, 0x74,
	0x8b, 0x89, 0x25, 0xe9, 0x86, 0x1c, 0x83, 0x27, 0x99, 0x6c, 0x8c, 0x98, 0x93, 0xc2, 0x14, 0xea,
	0x91, 0x90, 0x15, 0x97, 0xa5, 0x64, 0x5b, 0xb4, 0x52, 0x4e, 0x34, 0xa1, 0x6c, 0xab, 0x8d, 0xc5,
	0x76, 0x63, 0x9a, 0x43, 0x63, 0x2c, 0xb6, 0x1b, 0xdd, 0x7a, 0x03, 0x23, 0x21, 0x2b, 0xb9, 0x13,
	0x56, 0x49, 0x5b, 0x29, 0x5e, 0xd5, 0x35, 0x0a, 0x61, 0x1d, 0xb4, 0x95, 0xfe, 0x5e, 0xbb, 0x9e,
	0x16, 0xd9, 0x68, 0x17, 0x58, 0xa6, 0x4c, 0x5b, 0x8f, 0xf4, 0x9f, 0xef, 0xe3, 0x9f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x6e, 0x1d, 0x4c, 0x97, 0xae, 0x03, 0x00, 0x00,
}
