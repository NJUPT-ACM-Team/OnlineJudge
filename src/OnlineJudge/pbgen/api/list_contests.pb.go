// Code generated by protoc-gen-go.
// source: api/list_contests.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CType int32

const (
	CType_ICPC CType = 0
	CType_OI   CType = 1
	CType_CF   CType = 2
)

var CType_name = map[int32]string{
	0: "ICPC",
	1: "OI",
	2: "CF",
}
var CType_value = map[string]int32{
	"ICPC": 0,
	"OI":   1,
	"CF":   2,
}

func (x CType) String() string {
	return proto.EnumName(CType_name, int32(x))
}
func (CType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type ListContestsRequest_Element int32

const (
	ListContestsRequest_CID       ListContestsRequest_Element = 0
	ListContestsRequest_TITLE     ListContestsRequest_Element = 1
	ListContestsRequest_STARTTIME ListContestsRequest_Element = 2
	ListContestsRequest_ENDTIME   ListContestsRequest_Element = 3
	ListContestsRequest_STATUS    ListContestsRequest_Element = 4
)

var ListContestsRequest_Element_name = map[int32]string{
	0: "CID",
	1: "TITLE",
	2: "STARTTIME",
	3: "ENDTIME",
	4: "STATUS",
}
var ListContestsRequest_Element_value = map[string]int32{
	"CID":       0,
	"TITLE":     1,
	"STARTTIME": 2,
	"ENDTIME":   3,
	"STATUS":    4,
}

func (x ListContestsRequest_Element) String() string {
	return proto.EnumName(ListContestsRequest_Element_name, int32(x))
}
func (ListContestsRequest_Element) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{0, 0}
}

type ListContestsRequest struct {
	PerPage         int32                       `protobuf:"varint,1,opt,name=per_page,json=perPage" json:"per_page,omitempty"`
	CurrentPage     int32                       `protobuf:"varint,2,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	OrderBy         ListContestsRequest_Element `protobuf:"varint,3,opt,name=order_by,json=orderBy,enum=api.ListContestsRequest_Element" json:"order_by,omitempty"`
	IsDesc          bool                        `protobuf:"varint,4,opt,name=is_desc,json=isDesc" json:"is_desc,omitempty"`
	FilterCtype     CType                       `protobuf:"varint,5,opt,name=filter_ctype,json=filterCtype,enum=api.CType" json:"filter_ctype,omitempty"`
	FilterIsPublic  bool                        `protobuf:"varint,6,opt,name=filter_is_public,json=filterIsPublic" json:"filter_is_public,omitempty"`
	FilterIsVirtual bool                        `protobuf:"varint,7,opt,name=filter_is_virtual,json=filterIsVirtual" json:"filter_is_virtual,omitempty"`
}

func (m *ListContestsRequest) Reset()                    { *m = ListContestsRequest{} }
func (m *ListContestsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListContestsRequest) ProtoMessage()               {}
func (*ListContestsRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ListContestsRequest) GetPerPage() int32 {
	if m != nil {
		return m.PerPage
	}
	return 0
}

func (m *ListContestsRequest) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ListContestsRequest) GetOrderBy() ListContestsRequest_Element {
	if m != nil {
		return m.OrderBy
	}
	return ListContestsRequest_CID
}

func (m *ListContestsRequest) GetIsDesc() bool {
	if m != nil {
		return m.IsDesc
	}
	return false
}

func (m *ListContestsRequest) GetFilterCtype() CType {
	if m != nil {
		return m.FilterCtype
	}
	return CType_ICPC
}

func (m *ListContestsRequest) GetFilterIsPublic() bool {
	if m != nil {
		return m.FilterIsPublic
	}
	return false
}

func (m *ListContestsRequest) GetFilterIsVirtual() bool {
	if m != nil {
		return m.FilterIsVirtual
	}
	return false
}

type ListContestsResponse struct {
	Lines       []*ListContestsResponse_PerLine `protobuf:"bytes,1,rep,name=lines" json:"lines,omitempty"`
	TotalLines  int32                           `protobuf:"varint,2,opt,name=total_lines,json=totalLines" json:"total_lines,omitempty"`
	TotalPages  int32                           `protobuf:"varint,3,opt,name=total_pages,json=totalPages" json:"total_pages,omitempty"`
	CurrentPage int32                           `protobuf:"varint,4,opt,name=current_page,json=currentPage" json:"current_page,omitempty"`
	Error       *Error                          `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
}

func (m *ListContestsResponse) Reset()                    { *m = ListContestsResponse{} }
func (m *ListContestsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListContestsResponse) ProtoMessage()               {}
func (*ListContestsResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *ListContestsResponse) GetLines() []*ListContestsResponse_PerLine {
	if m != nil {
		return m.Lines
	}
	return nil
}

func (m *ListContestsResponse) GetTotalLines() int32 {
	if m != nil {
		return m.TotalLines
	}
	return 0
}

func (m *ListContestsResponse) GetTotalPages() int32 {
	if m != nil {
		return m.TotalPages
	}
	return 0
}

func (m *ListContestsResponse) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ListContestsResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type ListContestsResponse_PerLine struct {
	ContestId   int64  `protobuf:"varint,1,opt,name=contest_id,json=contestId" json:"contest_id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	StartTime   string `protobuf:"bytes,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime     string `protobuf:"bytes,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Status      string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	Access      string `protobuf:"bytes,6,opt,name=access" json:"access,omitempty"`
	ContestType CType  `protobuf:"varint,7,opt,name=contest_type,json=contestType,enum=api.CType" json:"contest_type,omitempty"`
}

func (m *ListContestsResponse_PerLine) Reset()                    { *m = ListContestsResponse_PerLine{} }
func (m *ListContestsResponse_PerLine) String() string            { return proto.CompactTextString(m) }
func (*ListContestsResponse_PerLine) ProtoMessage()               {}
func (*ListContestsResponse_PerLine) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1, 0} }

func (m *ListContestsResponse_PerLine) GetContestId() int64 {
	if m != nil {
		return m.ContestId
	}
	return 0
}

func (m *ListContestsResponse_PerLine) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

func (m *ListContestsResponse_PerLine) GetContestType() CType {
	if m != nil {
		return m.ContestType
	}
	return CType_ICPC
}

func init() {
	proto.RegisterType((*ListContestsRequest)(nil), "api.ListContestsRequest")
	proto.RegisterType((*ListContestsResponse)(nil), "api.ListContestsResponse")
	proto.RegisterType((*ListContestsResponse_PerLine)(nil), "api.ListContestsResponse.PerLine")
	proto.RegisterEnum("api.CType", CType_name, CType_value)
	proto.RegisterEnum("api.ListContestsRequest_Element", ListContestsRequest_Element_name, ListContestsRequest_Element_value)
}

func init() { proto.RegisterFile("api/list_contests.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x53, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0xdd, 0x34, 0x4d, 0xd2, 0xdc, 0xac, 0x6b, 0x1c, 0x17, 0x37, 0x2e, 0x88, 0x69, 0x9f, 0xca,
	0x82, 0x15, 0xd6, 0x07, 0x1f, 0x7c, 0x5a, 0xd3, 0x08, 0x81, 0xaa, 0x65, 0x1a, 0x7d, 0x0d, 0x69,
	0x72, 0x5d, 0x06, 0xd2, 0x24, 0xce, 0x4c, 0x85, 0xfe, 0x95, 0x7f, 0xe3, 0x97, 0xf8, 0x2e, 0x99,
	0x99, 0x22, 0x4b, 0xf7, 0x29, 0xdc, 0x73, 0xce, 0xbd, 0xb9, 0xdc, 0x73, 0x06, 0xae, 0xca, 0x9e,
	0xbd, 0x6d, 0x98, 0x90, 0x45, 0xd5, 0xb5, 0x12, 0x85, 0x14, 0x8b, 0x9e, 0x77, 0xb2, 0x23, 0x76,
	0xd9, 0xb3, 0xeb, 0x70, 0x60, 0xab, 0x6e, 0xb7, 0xeb, 0x5a, 0x0d, 0xcf, 0xfe, 0x8e, 0xe0, 0xf9,
	0x8a, 0x09, 0x99, 0x18, 0x35, 0xc5, 0x9f, 0x7b, 0x14, 0x92, 0xbc, 0x84, 0x49, 0x8f, 0xbc, 0xe8,
	0xcb, 0x7b, 0x8c, 0xac, 0xd8, 0x9a, 0x3b, 0xd4, 0xeb, 0x91, 0xaf, 0xcb, 0x7b, 0x24, 0x53, 0x38,
	0xaf, 0xf6, 0x9c, 0x63, 0x2b, 0x35, 0x3d, 0x52, 0x74, 0x60, 0x30, 0x25, 0xf9, 0x00, 0x93, 0x8e,
	0xd7, 0xc8, 0x8b, 0xed, 0x21, 0xb2, 0x63, 0x6b, 0x7e, 0x71, 0x1b, 0x2f, 0xca, 0x9e, 0x2d, 0x1e,
	0xf9, 0xd3, 0x22, 0x6d, 0x70, 0x87, 0xad, 0xa4, 0x9e, 0xea, 0xf8, 0x78, 0x20, 0x57, 0xe0, 0x31,
	0x51, 0xd4, 0x28, 0xaa, 0x68, 0x1c, 0x5b, 0xf3, 0x09, 0x75, 0x99, 0x58, 0xa2, 0xa8, 0xc8, 0x1b,
	0x38, 0xff, 0xc1, 0x1a, 0x89, 0xbc, 0xa8, 0xe4, 0xa1, 0xc7, 0xc8, 0x51, 0x93, 0x41, 0x4d, 0x4e,
	0xf2, 0x43, 0x8f, 0x34, 0xd0, 0x7c, 0x32, 0xd0, 0x64, 0x0e, 0xa1, 0x91, 0x33, 0x51, 0xf4, 0xfb,
	0x6d, 0xc3, 0xaa, 0xc8, 0x55, 0x03, 0x2f, 0x34, 0x9e, 0x89, 0xb5, 0x42, 0xc9, 0x0d, 0x3c, 0xfb,
	0xaf, 0xfc, 0xc5, 0xb8, 0xdc, 0x97, 0x4d, 0xe4, 0x29, 0xe9, 0xd3, 0xa3, 0xf4, 0xbb, 0x86, 0x67,
	0x29, 0x78, 0x66, 0x63, 0xe2, 0x81, 0x9d, 0x64, 0xcb, 0xf0, 0x8c, 0xf8, 0xe0, 0xe4, 0x59, 0xbe,
	0x4a, 0x43, 0x8b, 0x3c, 0x01, 0x7f, 0x93, 0xdf, 0xd1, 0x3c, 0xcf, 0x3e, 0xa7, 0xe1, 0x88, 0x04,
	0xe0, 0xa5, 0x5f, 0x96, 0xaa, 0xb0, 0x09, 0x80, 0xbb, 0xc9, 0xef, 0xf2, 0x6f, 0x9b, 0x70, 0x3c,
	0xfb, 0x6d, 0xc3, 0xe5, 0xc3, 0x6b, 0x88, 0xbe, 0x6b, 0x05, 0x92, 0xf7, 0xe0, 0x34, 0xac, 0x45,
	0x11, 0x59, 0xb1, 0x3d, 0x0f, 0x6e, 0xa7, 0x8f, 0xdc, 0x4d, 0x2b, 0x17, 0x6b, 0xe4, 0x2b, 0xd6,
	0x22, 0xd5, 0x7a, 0xf2, 0x1a, 0x02, 0xd9, 0xc9, 0xb2, 0x29, 0x74, 0xbb, 0x76, 0x05, 0x14, 0xb4,
	0x7a, 0x28, 0x18, 0x5c, 0x13, 0xca, 0x97, 0xa3, 0x60, 0x30, 0x4d, 0x9c, 0x18, 0x3b, 0x3e, 0x35,
	0x36, 0x06, 0x07, 0x39, 0xef, 0xb8, 0xba, 0x7d, 0x60, 0x6e, 0x9f, 0x0e, 0x08, 0xd5, 0xc4, 0xf5,
	0x1f, 0x0b, 0x3c, 0xb3, 0x19, 0x79, 0x05, 0x60, 0x52, 0x58, 0xb0, 0x5a, 0xc5, 0xc8, 0xa6, 0xbe,
	0x41, 0xb2, 0x9a, 0x5c, 0x82, 0x23, 0x99, 0x6c, 0x74, 0x82, 0x7c, 0xaa, 0x8b, 0xa1, 0x49, 0xc8,
	0x92, 0xcb, 0x42, 0xb2, 0x1d, 0xaa, 0x2d, 0x7d, 0xea, 0x2b, 0x24, 0x67, 0x3b, 0x1c, 0x82, 0x89,
	0x6d, 0xad, 0xc9, 0xb1, 0x22, 0x3d, 0x6c, 0x6b, 0x45, 0xbd, 0x00, 0x57, 0xc8, 0x52, 0xee, 0x85,
	0xda, 0xce, 0xa7, 0xa6, 0x1a, 0xf0, 0xb2, 0xaa, 0x50, 0x08, 0x65, 0xbf, 0x4f, 0x4d, 0x35, 0xe4,
	0xe9, 0xb8, 0x9e, 0xca, 0x93, 0x77, 0x9a, 0x27, 0xc3, 0x0f, 0xc5, 0xcd, 0x14, 0x1c, 0x85, 0x92,
	0x09, 0x8c, 0xb3, 0x64, 0x9d, 0x84, 0x67, 0xc4, 0x85, 0xd1, 0xd7, 0x2c, 0xb4, 0x86, 0x6f, 0xf2,
	0x29, 0x1c, 0x6d, 0x5d, 0xf5, 0xa8, 0xde, 0xfd, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x23, 0x2c, 0x33,
	0x0f, 0x86, 0x03, 0x00, 0x00,
}
