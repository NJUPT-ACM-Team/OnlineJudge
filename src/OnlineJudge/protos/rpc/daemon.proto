syntax='proto3';

package rpc;

service Helper {
    rpc StartJudging(StartJudgingRequest) returns (StartJudgingResponse) {}
    rpc GetTestingData(GetTestingDataRequest) returns (GetTestingDataResponse) {}
    // rpc GetDBInfo() returns (DBInfo) {}
    rpc Register(RegisterRequest) returns (RegisterResponse) {}

    rpc UpdateProblemDescription(UpdateProblemDescriptionRequest) returns (UpdateProblemDescriptionResponse) {}

    rpc UpdateSubmissionStatus(UpdateSubmissionStatusRequest) returns (UpdateSubmissionStatusResponse) {}
}


// message DBInfo {
// }

message UpdateSubmissionStatusRequest {
    int64 run_id = 1;
    string status = 2;
    string status_code = 3;
    int32 testcases_passed = 4;
    int32 time_used = 5;
    int32 memory_used = 6;
    string ce_info = 7;
}

message UpdateSubmissionStatusResponse{
    bool success = 1;
}

message UpdateProblemDescriptionRequest {

}

message UpdateProblemDescriptionResponse {

}

message GetTestingDataRequest {
    bool only_hash = 1;
    int64 local_pid = 2;
}

message GetTestingDataResponse {
    message Case {
        bool only_hash = 1;
        string in_hash = 2;
        string in = 3;
        string out_hash = 4;
        string out = 5;
    }

    message Spj {
        bool only_hash = 1;
        string spj_code_hash = 2;
        string spj_code = 3;
    }
    Spj spj = 1;
    repeated Case cases = 2;
}

message StartJudgingRequest {
    int64 run_id = 1;
}

message StartJudgingResponse {
    bool received = 1;
}

message RegisterRequest {

}

message RegisterResponse {

}
